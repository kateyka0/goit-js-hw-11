{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["\n// import { renderPhotoList, showQueryError } from './render-functions';\n\n// export function pixabayRequest(searchParams, container) {\n//   fetch(`https://pixabay.com/api/?${searchParams}`)\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error(response.status);\n//       }\n//       return response.json();\n//     })\n//     .then(photos => renderPhotoList(photos, container))\n//     .catch(error => showQueryError(error));\n// }\n\nconst API_KEY = '44332544-4246296cfd54d81c9e369dca1'; // Замініть 'YOUR_API_KEY' на свій ключ доступу\n\nexport async function fetchImages(keyword) {\n    const url = `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(keyword)}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data.hits;\n    } catch (error) {\n        console.error('Error fetching images:', error);\n        return [];\n    }\n}","// import iziToast from 'izitoast';\n// // Додатковий імпорт стилів\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// // Описаний у документації\n// import SimpleLightbox from 'simplelightbox';\n// // Додатковий імпорт стилів\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// let gallery = new SimpleLightbox('.gallery li a');\n// gallery.on('show.simplelightbox', function () {\n//   // do something…\n// });\n\n// gallery.on('error.simplelightbox', function (e) {\n//   console.log(e); // some usefull information\n// });\n// export function showQueryError(error) {\n//   console.log(error);\n//   iziToast.show({\n//     title: '',\n//     icon: 'icon-person',\n//     color: 'red', // blue, red, green, yellow\n//     position: 'topRight', // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter, center\n//     message:\n//       'Sorry, there are no images matching your search query. Please try again!',\n//   });\n// }\n// export function renderPhotoList(photos, container) {\n//   console.log(photos);\n//   const markup = photos.hits\n//     .map(photo => {\n//       return `<li>\n//                 <a href=\"${photo.largeImageURL}\"><img src='${photo.webformatURL}' alt='${photo.tags}'></a>\n//                 <div class=\"content\">\n//                     <div class=\"item\"><h3>Likes</h3><p>${photo.likes}</p></div>\n//                     <div class=\"item\"><h3>Views</h3><p>${photo.views}</p></div>\n//                     <div class=\"item\"><h3>Comments</h3><p>${photo.comments}</p></div>\n//                     <div class=\"item\"><h3>Downloads</h3><p>${photo.downloads}</p></div>\n//                 </div>\n//             </li>`;\n//     })\n//     .join('');\n//   container.textContent = '';\n//   container.insertAdjacentHTML('beforeend', markup);\n//   gallery.refresh();\n// }\n\nexport function clearGallery() {\n    const gallery = document.querySelector('.gallery');\n    gallery.innerHTML = '';\n}\n\nexport function displayImages(images) {\n    const gallery = document.querySelector('.gallery');\n    images.forEach(image => {\n        const card = createImageCard(image);\n        gallery.appendChild(card);\n    });\n}\n\nfunction createImageCard(image) {\n    const card = document.createElement('div');\n    card.classList.add('card');\n\n    const imageElement = document.createElement('img');\n    imageElement.src = image.webformatURL;\n    imageElement.alt = image.tags;\n\n    const cardInfo = document.createElement('div');\n    cardInfo.classList.add('card-info');\n    cardInfo.innerHTML = `\n        <p>Likes: ${image.likes}</p>\n        <p>Views: ${image.views}</p>\n        <p>Comments: ${image.comments}</p>\n        <p>Downloads: ${image.downloads}</p>\n    `;\n\n    card.appendChild(imageElement);\n    card.appendChild(cardInfo);\n\n    return card;\n}\n\nexport function showMessage(message) {\n    iziToast.error({\n        title: 'Error',\n        message: message,\n        position: 'topRight'\n    });\n}","// import { pixabayRequest } from './js/pixabay-api.js';\n\n// const fetchPhotoForm = document.querySelector('form');\n// const photoList = document.querySelector('.photo-list');\n\n// let searchParams = new URLSearchParams({\n//   key: '44332544-4246296cfd54d81c9e369dca1',\n//   q: 'sport',\n//   lang: 'en',\n//   id: '',\n//   image_type: 'all',\n//   orientation: 'horizontal',\n// });\n\n// fetchPhotoForm.addEventListener('submit', e => {\n//   console.log(e.target);\n//   e.preventDefault();\n//   pixabayRequest(searchParams, photoList);\n// });\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { fetchImages } from './js/pixabay-api.js';\nimport { clearGallery, displayImages, showMessage } from './js/render-functions.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const searchForm = document.querySelector('.search-form');\n\n    searchForm.addEventListener('submit', async function (event) {\n        event.preventDefault();\n\n        const keywordInput = document.querySelector('.keyword');\n        const keyword = keywordInput.value.trim();\n\n        if (keyword === '') {\n            showMessage('Please enter a search keyword');\n            return;\n        }\n\n        clearGallery();\n\n        try {\n            const images = await fetchImages(keyword);\n            if (images.length === 0) {\n                showMessage('Sorry, there are no images matching your search query. Please try again!');\n            } else {\n                displayImages(images);\n            }\n        } catch (error) {\n            console.error('Error searching images:', error);\n            showMessage('An error occurred while searching for images. Please try again later.');\n        }\n    });\n});"],"names":["API_KEY","fetchImages","keyword","url","error","clearGallery","gallery","displayImages","images","image","card","createImageCard","imageElement","cardInfo","showMessage","message","event"],"mappings":"0uBAeA,MAAMA,EAAU,qCAET,eAAeC,EAAYC,EAAS,CACvC,MAAMC,EAAM,gCAAgCH,CAAO,MAAM,mBAAmBE,CAAO,CAAC,2DAEpF,GAAI,CAGA,OADa,MADI,MAAM,MAAMC,CAAG,GACJ,QAChB,IACf,OAAQC,EAAO,CACZ,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,EACV,CACL,CCoBO,SAASC,GAAe,CAC3B,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACxB,CAEO,SAASC,EAAcC,EAAQ,CAClC,MAAMF,EAAU,SAAS,cAAc,UAAU,EACjDE,EAAO,QAAQC,GAAS,CACpB,MAAMC,EAAOC,EAAgBF,CAAK,EAClCH,EAAQ,YAAYI,CAAI,CAChC,CAAK,CACL,CAEA,SAASC,EAAgBF,EAAO,CAC5B,MAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,MAAM,EAEzB,MAAME,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,IAAMH,EAAM,aACzBG,EAAa,IAAMH,EAAM,KAEzB,MAAMI,EAAW,SAAS,cAAc,KAAK,EAC7C,OAAAA,EAAS,UAAU,IAAI,WAAW,EAClCA,EAAS,UAAY;AAAA,oBACLJ,EAAM,KAAK;AAAA,oBACXA,EAAM,KAAK;AAAA,uBACRA,EAAM,QAAQ;AAAA,wBACbA,EAAM,SAAS;AAAA,MAGnCC,EAAK,YAAYE,CAAY,EAC7BF,EAAK,YAAYG,CAAQ,EAElBH,CACX,CAEO,SAASI,EAAYC,EAAS,CACjC,SAAS,MAAM,CACX,MAAO,QACP,QAASA,EACT,SAAU,UAClB,CAAK,CACL,CCjEA,SAAS,iBAAiB,mBAAoB,UAAY,CACnC,SAAS,cAAc,cAAc,EAE7C,iBAAiB,SAAU,eAAgBC,EAAO,CACzDA,EAAM,eAAc,EAGpB,MAAMd,EADe,SAAS,cAAc,UAAU,EACzB,MAAM,KAAI,EAEvC,GAAIA,IAAY,GAAI,CAChBY,EAAY,+BAA+B,EAC3C,MACH,CAEDT,IAEA,GAAI,CACA,MAAMG,EAAS,MAAMP,EAAYC,CAAO,EACpCM,EAAO,SAAW,EAClBM,EAAY,0EAA0E,EAEtFP,EAAcC,CAAM,CAE3B,OAAQJ,EAAO,CACZ,QAAQ,MAAM,0BAA2BA,CAAK,EAC9CU,EAAY,uEAAuE,CACtF,CACT,CAAK,CACL,CAAC"}